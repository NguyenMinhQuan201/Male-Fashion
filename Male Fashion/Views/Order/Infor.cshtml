@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .rating {
        display: block;
        width: 175px;
        height: 45px;
        margin: 15px;
        background-color: aquamarine;
    }

    .modal-content {
        position: absolute;
        display: -ms-flexbox;
        display: flex;
        -ms-flex-direction: column;
        flex-direction: column;
        width: 150%;
        pointer-events: auto;
        left: -133px;
        background-color: #fff;
        background-clip: padding-box;
        border: 1px solid rgba(0, 0, 0, .2);
        border-radius: .3rem;
        outline: 0;
    }
    /*body {
                                            display: flex;
                                            flex-direction: column;
                                            align-items: center;
                                            font-family: 'Roboto', sans-serif;
                                        }*/
    .contain-5 {
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .history-page {
        background-color: lightgoldenrodyellow;
        width: 100%;
        height: 100%;
        padding: 64px;
        border-radius: 8px;
        margin-bottom: 85px;
    }

    .history-page__title {
        font-size: large;
    }

    hr {
        color: #b4b3b3;
    }

    .search {
        margin: auto;
        display: flex;
        justify-content: start;
        align-items: center;
        width: 75%;
        border: 1px solid #000;
        border-radius: 20px;
        padding: 1px;
        margin-bottom: 10px;
    }

    .search__icon-background {
        display: flex;
        justify-content: center;
        border: none;
        margin: 0 5px;
        cursor: pointer;
    }

    .search__icon {
        color: #000;
        font-size: 25px;
    }

    .search__input-box {
        font-size: 100%;
        border: none;
        width: 90%;
        background: border-box;
    }

    input[type='search']::-webkit-search-decoration,
    input[type='search']::-webkit-search-cancel-button,
    input[type='search']::-webkit-search-results-button,
    input[type='search']::-webkit-search-results-decoration {
        -webkit-appearance: none;
    }

    .search__input-box:focus {
        outline: none;
    }

    .ml-left {
        margin-left: 24px;
    }

    .purchase {
        width: 100%;
        display: flex;
        margin-top: 24px;
        justify-content: space-between;
    }

    .purchase__icon-background {
        align-self: center;
        margin: 10px;
        border-radius: 35px;
        display: flex;
        background-color: #c0df85;
    }

    .purchase__icon {
        padding: 10px;
        font-size: 50px;
        color: #fff;
    }

    .purchase__info {
        margin: auto 0;
    }

    .purchase__title {
        font-size: 16px;
        font-weight: 600;
    }

    .purchase__title,
    .purchase__date {
        margin: 0;
    }

    .purchase__date {
        padding: 3px 0 10px 0;
        font-size: 14px;
        color: #808080;
    }

    .purchase__price {
        /* align-self: center;
                margin-left: auto;
                text-align: center; */
        margin: 0;
    }

    .col-rating {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
    }

    .purchase__details-btn {
        padding: 3px 10px;
        transition: ease-in-out 0.2s;
        background-color: #c0df85;
        color: #fff;
        cursor: pointer;
        border: solid 1px #c0df85;
        border-radius: 10px;
    }

        .purchase__details-btn:hover {
            background-color: #c0df85;
            color: #fff;
            cursor: pointer;
            border: solid 1px #c0df85;
            border-radius: 10px;
        }

    #change-by-phone-detail {
        flex-direction: column;
    }

    @@media (min-width: 750px) {
        .history-page {
            width: 750px;
        }
    }

</style>
<style>
    /* Style The Dropdown Button */
    .dropbtn {
        background-color: gray;
        color: white;
        padding: 16px;
        font-size: 16px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        width: 160px;
    }

    /* The container <div> - needed to position the dropdown content */
    .dropdown {
        position: relative;
        display: inline-block;
    }

    /* Dropdown Content (Hidden by Default) */
    .dropdown-content {
        display: none;
        position: absolute;
        background-color: #f9f9f9;
        min-width: 160px;
        box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
        z-index: 1;
    }

        /* Links inside the dropdown */
        .dropdown-content a {
            color: black;
            padding: 12px 16px;
            text-decoration: none;
            display: block;
        }

            /* Change color of dropdown links on hover */
            .dropdown-content a:hover {
                background-color: #f1f1f1
            }

    /* Show the dropdown menu on hover */
    .dropdown:hover .dropdown-content {
        display: block;
    }

    /* Change the background color of the dropdown button when the dropdown content is shown */
    .dropdown:hover .dropbtn {
        background-color: #3e8e41;
    }
</style>
<!-- Modal -->
<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Đánh giá</h5>
                <button style="border: none;" type="button" class="btn-close" data-bs-dismiss="modal">Đóng</button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label for="recipient-name" class="col-form-label">Ý kiến khách hàng:</label>
                    <input type="text" class="form-control" id="recipient-name">
                </div>
                <div class="dropdown">
                    <button id="show-star" class="dropbtn">Đánh giá sao</button>
                    <div class="dropdown-content">
                        <a class="click-star" data-id="5" href="#">5 sao (☆☆☆☆☆)</a>
                        <a class="click-star" data-id="4" href="#">4 sao (☆☆☆☆)</a>
                        <a class="click-star" data-id="3" href="#">3 sao (☆☆☆)</a>
                        <a class="click-star" data-id="2" href="#">2 sao (☆☆)</a>
                        <a class="click-star" data-id="1" href="#">1 sao (☆)</a>

                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                <button type="button" onclick="Send()" class="btn btn-primary">Gửi</button>
            </div>
        </div>
    </div>
</div>
<div class="contain-5">
    <div class="history-page">
        <h1 class="history-page__title">Xem lịch sử mua hàng</h1>
        <hr />
        <div class="search">
            <div class="search__icon-background" onclick="GetOrders()">
                <span class="iconify search__icon"
                      data-inline="false"
                      data-icon="ant-design:search-outlined"></span>
            </div>
            <input class="search__input-box" id="id-search" type="search" placeholder="Nhập mã đơn" />
        </div>
        <div class="history-page__purchases">
            <div id="change-by-phone" class="purchase">
            </div>
            <div id="change-by-phone-detail" class="purchase">
            </div>
        </div>
    </div>
</div>
<script src="https://code.iconify.design/1/1.0.3/iconify.min.js"></script>
<script>
    var star;
    var idpro;

    document.addEventListener('DOMContentLoaded', function () {
        $('.click-star').on('click', function () {
            var dataId = $(this).data('id');
            star = dataId;
            var textContent = $(this).text();
            $('#show-star').html(textContent);
        });
    });
    function addCommas(number) {
        return number.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    }
    function GetStatusOrder(status) {
        switch (status) {
            case 0:
                return "Đã hủy";
                break;
            case 1:
                return "Đang giao";
                break;
            case 2:
                return "Đã hoàn thành";
                break;
        }
    }
    function Bind(obj) {
        idpro = obj;
    }
    function Send() {
        console.log("mess:", mess);
        console.log("star:", star);
        console.log("idpro:", idpro);
        var obj = {
            Id: idpro,
            Stars: star,
            Name: mess.nameCustomer,
            SDT: mess.phone,
            Des: $('#recipient-name').val(),
            DateCreate:Date.now,
            IdOrder: mess.idOrder,
        }
        console.log("obj:", obj)
        $.ajax({
            url: "@ViewBag.MyUrl" + `/api/Order/create-rating-pro`,
            contentType: "application/json",
            dataType: "json",
            data: JSON.stringify(obj),
            type: "POST",
            success: function (response) {
                var newButton = document.createElement("button");
                newButton.type = "button";
                newButton.classList.add("btn", "rating");
                newButton.textContent = "Đã đánh giá";
                // Lấy ra phần tử button cũ
                var oldButton = document.getElementById(`product-${obj.Id}`);
                // Thay thế button cũ bằng button mới
                oldButton.parentNode.replaceChild(newButton, oldButton);
                $('#exampleModal').modal('hide');
            }
        })
    }
    var mess;
    function GetOrders() {
        var str = "";
        var str2 = "";
        var inputElement = document.getElementById("id-search");
        var id = inputElement.value;
        $.ajax({
            url: "@ViewBag.MyUrl" + `/api/Order/get-by-phone?idOrder=${id}&phone=0`,
            dataType: "json",
            type: "GET",
            success: function (response) {
                var obj = response.resultObj.orderDetailDto;
                mess = obj;
                str +=
                    `<div class="purchase">
                            <div class="purchase__info">
                                    <p class="purchase__title">Tên khách: ${obj.nameCustomer}</p>
                                    <p class="purchase__date">Email: ${obj.email}</p>
                                    <p class="purchase__date">Địa chỉ: ${obj.address}</p>
                                    <p class="purchase__date">SĐT: 0${obj.phone}</p>
                                    <p class="purchase__date">Tạo ngày ${chuyenDoiNgayThang(obj.createdAt)}</p>
                                    <p class="purchase__date">Trạng thái: ${GetStatusOrder(obj.status)}</p>
                                    <p class="purchase__date">Tổng: ${addCommas(obj.sumPrice)}đ</p>
                        </div>`
                $("#change-by-phone").html(str);
                response.resultObj.getOrderDto.forEach(function (item) {
                    if (item.isRating == 1) {
                        str2 += `<div class="purchase">
                                                <img style="width: 60px;" src="https://localhost:7179/user_content/${item.img}"/>
                                                    <div class="purchase__info" style="margin-left: 32px;">
                                                        <p class="purchase__title">${item.nameProduct}</p>
                                                        <p class="purchase__date">Số lượng${item.quantity}</p>
                                                    </div>
                                                <div class="col-rating">
                                                    <p class="purchase__price">Giá ${addCommas(item.price)}đ</p>
                                                    <button id="product-${item.idProduct}" data-bs-toggle="modal" data-bs-target="#exampleModal" type="button" onclick="Bind('${item.idProduct}')" class="btn rating isRating-${item.isRating}">Đánh giá sản phẩm</button>
                                                </div>
                                        </div>`
                    }
                    else {
                        str2 += `<div class="purchase">
                                                <img style="width: 60px;" src="https://localhost:7179/user_content/${item.img}"/>
                                                    <div class="purchase__info" style="margin-left: 32px;">
                                                        <p class="purchase__title">${item.nameProduct}</p>
                                                        <p class="purchase__date">Số lượng${item.quantity}</p>
                                                    </div>
                                                <div class="col-rating">
                                                    <p class="purchase__price">Giá ${addCommas(item.price)}đ</p>
                                                    <button id="product2-${item.idProduct}" type="button" class="btn rating canpo-${item.idProduct}">Đã đánh giá</button>
                                                </div>
                                        </div>`
                    }
                });
                $("#change-by-phone-detail").html(str2);
                // $(`.isRating-0`).hide();
            }
        })

    }
    function chuyenDoiNgayThang(dateTimeString) {
        // Tạo một đối tượng Date từ chuỗi đầu vào
        var dateTime = new Date(dateTimeString);

        // Lấy ngày, tháng và năm từ đối tượng Date
        var ngay = dateTime.getDate();
        var thang = dateTime.getMonth() + 1; // Lưu ý: Tháng bắt đầu từ 0
        var nam = dateTime.getFullYear();

        // Định dạng lại chuỗi ngày tháng
        var ngayThangNam = ngay + '/' + thang + '/' + nam;

        // Trả về chuỗi ngày tháng đã định dạng
        return ngayThangNam;
    }
</script>